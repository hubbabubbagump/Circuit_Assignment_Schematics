library IEEE;

use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;

entity M is
   port(cs, r : in std_logic;
        addr : in std_logic_vector(3 downto 0);
        mout : out std_logic_vector(15 downto 0));
end M;

architecture behav of M is
type memory is array(0 to 8) of std_logic_vector(15 downto 0);
begin
   process is
   variable MEM : memory;
   variable locn : natural;
   begin
      -- Store your program here:
      --         opc    s/d     t        din
      MEM(0):= "0110" & "01" & "00" & "00000010"; --load 2 into s = 1
      MEM(1):= "0110" & "10" & "00" & "00000101"; --load 5 into s = 2
      MEM(2):= "0110" & "11" & "10" & "00000000"; --load 0 into s = 3, t = 2 
      MEM(3):= "0001" & "11" & "10" & "00000000"; --add s = 3, t = 2
      MEM(4):= "0100" & "01" & "10" & "00000000"; --dec s = 1
      MEM(5):= "0001" & "11" & "10" & "00000000"; --add s = 3, t = 2
      MEM(6):= "0100" & "01" & "10" & "00000000"; --dec s = 1
      MEM(7):= "0111" & "11" & "10" & "00000000"; --displ s = 3
      MEM(8):= "0000000000000000";
      -- Continue with more instructions as required.
      -- End of program

      locn := to_integer(addr);
      mout <= MEM(locn);
      wait on addr;
   end process;
end behav;